[{"categories":null,"content":"Introduction In this tutorial, I will cover how to configure an OPNsense VM on Proxmox with VLANs, connected to a Layer 3 switch. This setup is ideal for managing network segmentation and enhancing security within your virtual environment.\nPrerequisites Proxmox VE installed OPNsense VM running A physical Layer 3 switch Basic knowledge of network configuration Step 1: Install and Configure Open vSwitch on Proxmox First, install the Open vSwitch package on your Proxmox server:\napt update apt install openvswitch-switch Configure Physical Interfaces Proxmox node physical interfaces setup:\nenp2s0 are enp3s0 are my physical interface enp3s0 is my WAN so I simply created a Linux Bridge pointing to this interface enp2s0 is my LAN so I created a OVS bridge interface pointing to this interface v10,v20,v30,v40 for the vlans I created OVS IntPort pointing to vmbr1 Step 2: Assign Interfaces in OPNsense Once OPNsense is installed on a VM, assign the 2 interfaces.\nStep 3: Configure OPNsense with VLANs Setup VLANs in OPNsense In the OPNsense web interface, navigate to Interfaces \u0026gt; Other Types \u0026gt; VLAN:\nAdd VLANs by specifying the VLAN tag and corresponding interface. then go to assignment and add the interface you created\nConfigure DHCP and Firewall Rules Set up DHCP servers for each VLAN to manage IP leasing and configure firewall rules to ensure secure traffic flow between VLANs.\nStep 4: Connect and Configure the Layer 3 Switch Trunk Configuration Configure the uplink port to the Proxmox server as a trunk port, allowing all VLANs. Access Ports Setup Set other ports as access ports, assigning them to specific VLANs as per your network design. Conclusion By following these steps, you can successfully configure VLANs on an OPNsense VM running on Proxmox, utilizing a physical Layer 3 switch to manage and route traffic efficiently. This setup is essential for maintaining a secure, segmented network in a virtualized environment.\n","permalink":"http://localhost:1313/posts/vlansetupopnsensewithl3switch/","tags":null,"title":"Vlan Setup Opnsense VM on PVE With L3 Switch"},{"categories":null,"content":"Introduction In this tutorial, I will cover how to configure Truenas-core 13.0 using Proxmox 8.1.3, including the utilization of external HD as data storage.\ninstallation: Download the latest ISO version of TrueNas-core from here.\nYou can directly insert the link of the ISO file on PVE by navigating to \u0026ldquo;Disk\u0026rdquo; \u0026gt; \u0026ldquo;ISO Images\u0026rdquo; \u0026gt; \u0026ldquo;Download From URL\u0026rdquo; \u0026gt; \u0026ldquo;Enter URL\u0026rdquo; and then click \u0026ldquo;Query URL\u0026rdquo;.\nIn the right-top corner click create a new VM and use these settings:\nGENERAL:\r1) Set the node where the VM will run\r2) Enter the VM ID\r3) Enter the VM name\rOS:\r1) Select the Storage where the ISO is located\r2) Select the downloaded iso image\r3) Type OS: Linux\rSystem:\r1) SCSI contoller: Virtl0 SCSI\r2) Leave the other options as default\rDisks:\r1) Set the Disk Size to at least 16GB for the OS\r2) Leave the other options as default\rMemory:\r1) Set at least 8gb of RAM\rCPU:\r1) Socket 1 and 2 cores\r2) Leave the other options as default\rNetwork:\r1) This depends on your Network configuration.\r2) Consider passing the Virtual Interface without VLAN tag as you will configure VLAN on TrueNas\rConfirm:\r1) Remove the \u0026#34;Start after creation\u0026#34; flag Passthrough Physical Disk to Truenas VM In this example, we want to pass through these disks:\n2TB HDD WDG serialnuberXXX\n2TB HDD WDG serialnumberYYY\n2TB HDD ST serialnumberZZZ\nIf the inserted disks are new, wipe the disk and create the GPT table directly from PVE. In my case, it shows the ZFS partition because I am already using it. Normally, you wouldn\u0026rsquo;t see any partitions.\nIn general, the best option is to purchase a RAID controller card and pass the entire PCI to the VM. However, in this case, I will cover the configuration for passing individual disks to Truenas.\nNavigate to the proxmox shell and run this command:\ncopy and note the id of the disks\nls -l /dev/disk/by-id Command to Run: (note that scsi number changes)\nqm set [VM_ID] -scsi1 /dev/disk/by-id/[FULL_ID_OF_DISK]\rqm set [VM_ID] -scsi2 /dev/disk/by-id/[FULL_ID_OF_DISK]\rqm set [VM_ID] -scsi3 /dev/disk/by-id/[FULL_ID_OF_DISK] Example of the command:\nqm set 114 -scsi1 /dev/disk/by-id/ata-WDC_WD20EFAX-68B2RN1_WD-WXW2AB23AJNL After you have done this make sure of your configuration by running:\ncat /etc/pve/qemu-server/[VM_ID].conf Now you can start your VM and ensure that all disks are being read correctly.\nEXTERNAL HDD-ENCLOSURE VIA USB-C If you are running a home-lab setup like I do and you are using SFF desktop PC, you can use this specific type of HD enclosure to create your NAS and pass the disks using the above command. However, it\u0026rsquo;s not recommended to use USB, but in my case it works correctly. Therefore, if you have the option, opt for a direct connection to the motherboard via SATA/PCI.\n","permalink":"http://localhost:1313/posts/proxmoxtruenas/","tags":["Networking","Server","Linux","PVE","TrueNas"],"title":"Install TrueNas core on PVE"},{"categories":null,"content":"Introduction PVE is a hypervisor that allows you to run Virtual Machines using Linux technologies. It is built on Debian and is entirely open-source. It operates through a web-based GUI where you can manage your VMs, LXC containers, networking, storage, and more\nTips after installation: Remove pop-up \u0026ldquo;no valid subscription\u0026rdquo; run this command and clean cache of your broweser\nsed -i.backup -z \u0026#34;s/res === null || res === undefined || \\!res || res\\n\\t\\t\\t.data.status.toLowerCase() \\!== \u0026#39;active\u0026#39;/false/g\u0026#34; /usr/share/javascript/proxmox-widget-toolkit/proxmoxlib.js \u0026amp;\u0026amp; systemctl restart pveproxy.service This message will disappear if you run the above command or if purchase a subscription (enterprise env).\nFix Repositories for proxmox in the web-gui navigate to your host \u0026ndash;\u0026gt; update \u0026ndash;\u0026gt; repositories and remove the enterprise one and activate the pve-no-subscription:\nIf you plan to use proxmox in a production environment I would suggest to take a better look online before changing the repositories\nVMs vs LXC What shoud I use?\nVM: Virtual Machine provide a robust layer of isolation from the host system through virtual emulation of hardware components. This higher level of isolation ensures that if a VM encounters any issues or malfunctions, it does not affect the underlying host system or proxmox in this case.\nLXC: Linux Containers, consume less resources compared to vms because they share the host system\u0026rsquo;s kernel. For example, you cannot create a Windows container on a Linux kernel, as Windows cannot run on a Linux kernel. This sharing of the kernel also means that they are inherently less secure than virtual machines, as any compromise in one container can potentially affect others on the same host\nAs you can see, I use LXC for straightforward applications like DNS, VPN, and email due to their lightweight nature. Meanwhile, for the Windows10 and the router machine, I utilize VMs.\nBackup I suggest to do backup of your vms/lxc on proxmox as it is very simple and straightforward and it\u0026rsquo;s the best practice for data-recovery\nBackup option:\nConnect nas to proxmox via SMB or NFS (datacenter-\u0026gt;storage-\u0026gt;add-\u0026gt;SMB~NFS)\nUse PBS and mount the backup storage (datacenter-\u0026gt;storage-\u0026gt;add-\u0026gt;proxmox-backup-server)\nDo manual backup of your vms on an external disk.\nAs you have connect an external storage you can do manual backup or schedule it in datacenter-\u0026gt;backup (see image above)\nI suggest to do backups outside of proxmox, so even in case it fails for whatever reason, you can just restore the backups in another pve machine and be up and running again.\nAbout PBS you can install it in a VM inside proxmox but you shoud consider the point above.\nAn easy way to deploy services I use this website to quickly and easily deploy a variety of services like media-server, operating systems, Docker, and more.\n","permalink":"http://localhost:1313/posts/proxmoxbasicstips/","tags":["Networking","Server","Linux","PVE"],"title":"ProxmoxBasicsTips"},{"categories":null,"content":"Introduction In this tutorial I will explain you how to connect your ESP8266-01 to ThingSpeak and read some data.\nUse Arduino IDE and load this program: #include \u0026#34;DHT.h\u0026#34; #include \u0026#34;ESP8266WiFi.h\u0026#34; #include \u0026#34;ThingSpeak.h\u0026#34; const char * api_key = \u0026#34;abcdef\u0026#34;; const char * ssid = \u0026#34;wifi-name\u0026#34;; const char * pass = \u0026#34;wifi-password\u0026#34;; unsigned long myChannelNumber=12345678; const char* server = \u0026#34;api.thingspeak.com\u0026#34;; #define DHTPIN 2 #define DHTTYPE DHT11 DHT dht (DHTPIN, DHTTYPE); WiFiClient client; float t; float h; void setup() { ThingSpeak.begin(client); dht.begin(); Serial.begin(115200); delay(10); WiFi.begin(ssid, pass); while (WiFi.status() != WL_CONNECTED) { delay(500); Serial.print(\u0026#34;.\u0026#34;); } } void loop() { h = 10+dht.readHumidity(); t = dht.readTemperature(); ThingSpeak.setField(1,t); ThingSpeak.setField(2,h); ThingSpeak.writeFields(myChannelNumber,api_key); delay(2000); } Remember to change all the initial parameters: api_key = \u0026ldquo;YOUR KEY\u0026rdquo;\nssid = \u0026ldquo;wifi name\u0026rdquo;\npass = \u0026ldquo;wifi password\u0026rdquo;\nmyChannelNumber = \u0026ldquo;channel number\u0026rdquo;\nGo to Files -\u0026gt; Preferences and insert this link in “Additional Boards Manager URLs”: https://arduino.esp8266.com/stable/package_esp8266com_index.json Navigate to \u0026ldquo;Tools\u0026rdquo; and select \u0026ldquo;Manage Libraries.\u0026rdquo; Install the following libraries: Adafruit ESP8266\nAdafruit DHT Sensor\nThingSpeak IoT\nAs you have installed all the necessary libraries you can upload the code to your esp connected via usb serial Connect the ESP8266 to the DHT11 in this way\nESP8266:\nGND -\u0026gt; GND\nVCC -\u0026gt; 3.3V\nIO2 -\u0026gt; DHT11 Data\nIf you have done all the steps correctly you will find the data in thingspeak\n","permalink":"http://localhost:1313/posts/connectesp8266withdht11sensortothingspeak/","tags":["IoT","Electronic"],"title":"Connect ESP8266 with DHT11 sensor to ThingSpeak"},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.es/","tags":null,"title":""},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.fr/","tags":null,"title":""},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.hi/","tags":null,"title":""},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.jp/","tags":null,"title":""},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.pl/","tags":null,"title":""},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.ru/","tags":null,"title":""},{"categories":null,"content":"","permalink":"http://localhost:1313/search/_index.zh-cn/","tags":null,"title":""}]